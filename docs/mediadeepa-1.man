.\" t
.\"     Title: mediadeepa
.\"    Author: Media ex Machina / hdsdi3g 
.\" Generator: mediadeepa
.\"      Date: 10/04/2024
.\"    Source: mediadeepa 0.0.49
.\"  Language: English
.TH "MEDIADEEPA" "1" "10/04/2024" "mediadeepa 0\&.0\&.49" ""
.\" -----------------------------------------------------------------
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\"Autogenerated document ; based on man login.
.\" -----------------------------------------------------------------
.\"Set default formatting
.\" -----------------------------------------------------------------
.\"Disable hyphenation
.nh
.\"Disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\"MAIN CONTENT STARTS HERE
.\" -----------------------------------------------------------------
.SH "NAME"
mediadeepa \- Extract/process technical informations from audio/videos files/streams
.SH "SYNOPSIS"
mediadeepa [\-hov] [\-\-temp DIRECTORY]
           [\-i FILE]\&.\&.\&. [\-\-input\-list TEXT_FILE_LIST]\&.\&.\&.
           [\-c] [\-mn] [\-an | \-vn] [\-fo FILTER] [\-fn FILTER] [\-\-filter\-X VALUE]
           [\-f FORMAT_TYPE] [\-e DIRECTORY] [\-\-extract FILE]
.SH "DESCRIPTION"
Audio/video medias and streams deep analyzer in Java with FFmpeg as back\-end: extract/process technical information from audio/videos files/streams\&.
.PP
\fIThis application is currently in alpha version, and should not be ready yet for production\fR
.PP


.PP
This application will run FFmpeg on a source video/audio file to apply some filters, and generate analysis raw data (mostly high verbosely text/XML streams)\&. They are parsed and reduced/converted/drawn/summarized them to some output formats by Mediadeepa\&.
.PP
.RS 4
Mediadeepa is a command line standalone application (no GUI, no specific setup)\&.
.RE
This application is licensed with the GNU General Public License v3\&.
.PP

Mediadeepa can handle any audio/video files managed by FFmpeg, and produce reports with it\&.
.PP
Analysis scope is currently based on FFmpeg filters and tools:
.PP
.RS 4
\- Audio phase meter \fBaphasemeter\fR
.PP
\- Time domain statistics about audio frames \fBastats\fR
.PP
\- Audio loudness meter (EBU R128 scanner) \fBebur128\fR
.PP
\- Audio silence detection \fBsilencedetect\fR
.PP
\- Video black/block artifacts/blurred/duplicate/interlacing frames detection (\fBblackdetect\fR / \fBblockdetect\fR / \fBblurdetect\fR / \fBfreezedetect\fR / \fBidet\fR)
.PP
\- Video border detection \fBcropdetect\fR
.PP
\- Video spatial information (SI) and temporal information (TI) \fBsiti\fR
.PP
\- Structural media container information: audio/video stream frames size, timing, GOP type
.PP
\- Create a technical resumed of media file based on FFprobe media file header
.PP
\- Optional filter use, based on command line (user choice) and current FFmpeg filter availability on app environment\&.
.PP
\- User can optionally add timed constraints:
.PP
.RS 4
\- start position on media file
.PP
\- limit analysis duration on media file
.PP
\- limit time to do the analysis operation
.PP
.RE
\- During the analyzing operation, an ETA/progress bar is displayed, and based on current FFmpeg processing
.PP
.RE
And it can export to file the FFprobe XML with media headers (container and A/V streams)\&.
.PP
This application can run on three different "modes":
.PP
.RS 4
\- \fIProcess to export\fR: this is the classical mode\&. Mediadeepa will drive FFmpeg to produce analysis data from your source file, and export the result a the end\&.
.PP
\- \fIProcess to extract\fR: sometimes, you don't need to process data during the analysis session\&. So, Mediadeepa can just extract to raw text/xml files (zipped in one archive file) all the gathered data from FFmpeg\&.
.PP
\- \fIImport to export\fR: to load in Mediadeepa all gathered raw data files\&. Mediadeepa is \fIvery tolerant\fR with the zip content, notably if they were not created by Mediadeepa (originally)\&. \fINo one is mandatory in zip\&.\fR
.PP
.RE
You can process multiple files and directory scans in one run, as well as load a text file as file list to process\&.
.PP
Known limitations for Mediadeepa
.RS 4
\- It only support the first video, and the first founded audio stream of a file\&.
.PP
\- Audio mono and stereo only\&.
.PP
\- Some process take (long) time to do, like SITI and container analyzing, caused by poor FFmpeg/FFprobe performances with \fIthese\fR filters\&.
.PP
\- Loudness EBU R\-128,and audio stats measures works correctly with FFmpeg v7+, due to internal bugs/limitations with the previous versions\&.
.PP
.RE
An internal warning will by displayed if you try to works with a Zip archive created by a different Mediadeepa version\&.
.PP

.SH "EXAMPLES"
Process to export
Export to the current directory the analysis report for the file \fBvideofile\&.mov\fR:
.PP
.RS 4
mediadeepa \-i videofile\&.mov \-f report \-e \&.
.RE
.PP
Export to my \fBDownload\fR directory the analysis result, as MS Excel and graphic files, the media file \fBvideofile\&.mov\fR, only for audio and media container:
.PP
.RS 4
mediadeepa \-i videofile\&.mov \-c \-f xlsx \-f graphic \-vn \-e $HOME/Downloads
.RE
.PP
All available \fIExport formats type\fR are listed by:
.PP
.RS 4
mediadeepa \-o
.RE
.PP
Import or Process to extract
Just:
.PP
.RS 4
mediadeepa \-i videofile\&.mov \-\-extract analysing\-archive\&.zip
.RE
.PP
You can setup FFmpeg, like with import, like:
.PP
.RS 4
mediadeepa \-i videofile\&.mov \-c \-an \-\-extract analysing\-archive\&.zip
.RE
.PP
Extracted (archive) ZIP file can be loaded simply by \fB\-i\fR:
.PP
.RS 4
mediadeepa \-i analysing\-archive\&.zip \-f report \-f graphic \-e \&.
.RE
.PP
Multiple Import or Process
Add \fB\-i\fR options to works with multiple files, like:
.PP
.RS 4
mediadeepa \-i analysing\-archive\&.zip \-i videofile\&.mov \-i anotherfile\&.wav \-f report \-f graphic \-e \&.
.RE
.PP
You can mix archive zip files and media files, but beware to not import with extract (zip to zip) or use single output file mode (\fB\-\-single\-export\fR)\&.
.PP
Directory scan to input files
With the same restrictions as Multiple Import or Process, you can use a directory with \fB\-i\fR parameter\&.
.PP
.RS 4
mediadeepa \-i /some/directory \-i /some/another/directory \-f report \-f graphic \-e \&.
.RE
.PP
All non hidden founded files, not recursively (ignore the sub directories) will be used\&. You should use include/exclude parameter to manage the file selection criteria\&.
.PP
Use:
.PP
.RS 4
mediadeepa \-i /some/directory \-\-recursive \-\-exclude\-path never\-this \-\-include\-ext "\&.mkv" \-f report \-f graphic \-e \&.
.RE
.PP
To
.PP
.RS 4
\- scan recursively \fB/some/directory\fR directory
.PP
\- with the \fB/some/directory/never\-this/*\fR directory ignored
.PP
\- only for MKV files
.PP
.RE
More options are available\&.
.PP
Realities directory scan to input files
With the same options and restrictions as Directory scan to input files, just add \fB\-\-scan 10\fR to scan every 10 seconds all provided directories (simple \fB\-i\fR files will be processed on application starts), like:
.PP
.RS 4
mediadeepa \-i /some/directory \-\-scan 10 \-f report \-f graphic \-e \&.
.RE
.PP
Stop the scans with a key\-press, or just with \fBCTRL+C\fR\&.
.PP
Load files to process from a text file
With the \fB\-il\fR, as input list option:
.PP
.RS 4
mediadeepa \-if my\-medias\&.txt \-f report \-f graphic \-e \&.
.RE
.PP
And the \fBmy\-medias\&.txt\fR file can just contain:
.PP
.RS 4
analysing\-archive\&.zip
videofile\&.mov
anotherfile\&.wav
.RE
.PP
.RS 4
\- Any space lines are ignored\&.
.PP
\- Charset load respect the current OS session\&.
.PP
\- You can use Windows and Linux new lines symbols (and you can mix them)\&.
.PP
\- You can accumulate multiple \fB\-i\fR and \fB\-il\fR options, with the same limits as Multiple Import or Process\&.
.PP
\- Before starts the imports and processing, the application will check and throw an error if a file is missing (in \fB\-i\fR, \fB\-il\fR, and in the lists itself)\&.
.PP
.RE

.SH "OPTIONS"
\fB\-h\fR, \fB\-\-help\fR
.PP
.RS 4
Show the usage help
.PP
.RE

\fB\-v\fR, \fB\-\-version\fR
.PP
.RS 4
Show the application version
.PP
.RE

\fB\-o\fR, \fB\-\-options\fR
.PP
.RS 4
Show the avaliable options on this system
.PP
.RE

\fB\-\-autocomplete\fR
.PP
.RS 4
Show the autocomplete bash script for this application
.PP
.RE

\fB\-i\fR, \fB\-\-input\fR \fIFILE\fR [can be used multiple times]
.PP
.RS 4
Input (source media or Mediadeepa archive) file or full directory to work with
.PP
.RE

\fB\-il\fR, \fB\-\-input\-list\fR \fITEXT_FILE_LIST\fR [can be used multiple times]
.PP
.RS 4
Read input files from a text list
.PP
.RE

\fB\-\-temp\fR \fIDIRECTORY\fR
.PP
.RS 4
Temp dir to use in the case of the needs to export to a temp file
.PP
.RE

\fB\-\-verbose\fR
.PP
.RS 4
Verbose mode
.PP
.RE

\fB\-q\fR, \fB\-\-quiet\fR
.PP
.RS 4
Quiet mode (don't log anyting, except errors)
.PP
.RE

\fB\-\-log\fR \fILOG_FILE\fR
.PP
.RS 4
Redirect all log messages to text file
.PP
.RE

\fB\-\-graphic\-jpg\fR
.PP
.RS 4
Export to JPEG instead to PNG the produced graphic images
.PP
.RE

==== Scan directory options ====
.PP
\fB\-r\fR, \fB\-\-recursive\fR
.PP
.RS 4
Scan a directory and all its sub directory to work with
.PP
.RE

\fB\-\-scan\fR \fISECONDS\fR
.PP
.RS 4
Time, in seconds, between two regular scan of input directories, if applicable
.PP
.RE

\fB\-\-include\-ext\fR \fIEXTENTION\fR [can be used multiple times]
.PP
.RS 4
Only search files with this extention, during directory scan
.PP
.RE

\fB\-\-exclude\-ext\fR \fIEXTENTION\fR [can be used multiple times]
.PP
.RS 4
Ignore files with this extention, during directory scan
.PP
.RE

\fB\-\-exclude\-path\fR \fIPATH\fR [can be used multiple times]
.PP
.RS 4
Ignore files founded under this directory, during directory scan
.PP
.RE

\fB\-\-include\-file\fR \fIFILE_NAME\fR [can be used multiple times]
.PP
.RS 4
Only search files with this name (with willcards), during directory scan
.PP
.RE

\fB\-\-include\-dir\fR \fIDIRECTORY_NAME\fR [can be used multiple times]
.PP
.RS 4
Only search sub\-directories with this name (with willcards), during directory scan
.PP
.RE

\fB\-\-exclude\-file\fR \fIDIRECTORY_NAME\fR [can be used multiple times]
.PP
.RS 4
Ignore files with this name (with willcards), during directory scan
.PP
.RE

\fB\-\-exclude\-dir\fR \fIDIRECTORY_NAME\fR [can be used multiple times]
.PP
.RS 4
Ignore sub\-directories with this name (with willcards), during directory scan
.PP
.RE

\fB\-\-include\-hidden\fR
.PP
.RS 4
Allow hidded files (and dot files), during directory scan
.PP
.RE

\fB\-\-include\-link\fR
.PP
.RS 4
Allow symbolic links, during directory scan
.PP
.RE

==== Process media file options ====
.PP
\fB\-c\fR, \fB\-\-container\fR
.PP
.RS 4
Do a container analysing (ffprobe streams)
.PP
.RE

\fB\-t\fR \fIDURATION\fR
.PP
.RS 4
Duration of input file to proces it
.PP
See https://ffmpeg\&.org/ffmpeg\-utils\&.html#time\-duration\-syntax
.PP
.RE

\fB\-ss\fR \fIDURATION\fR
.PP
.RS 4
Seek time in input file before to proces it
.PP
See https://ffmpeg\&.org/ffmpeg\-utils\&.html#time\-duration\-syntax
.PP
.RE

\fB\-max\fR \fISECONDS\fR
.PP
.RS 4
Max time let to process a file
.PP
.RE

\fB\-fo\fR, \fB\-\-filter\-only\fR \fIFILTER\fR [can be used multiple times]
.PP
.RS 4
Allow only this filter(s) to process (\-o to get list)
.PP
.RE

\fB\-fn\fR, \fB\-\-filter\-no\fR \fIFILTER\fR [can be used multiple times]
.PP
.RS 4
Not use this filter(s) to process (\-o to get list)
.PP
.RE

\fB\-mn\fR, \fB\-\-media\-no\fR
.PP
.RS 4
Disable media analysing (ffmpeg)
.PP
.RE

\fB\-wfn\fR, \fB\-\-wavform\-no\fR
.PP
.RS 4
Disable wavform measuring (ffmpeg)
.PP
.RE

\fB\-snn\fR, \fB\-\-snapshot\-no\fR
.PP
.RS 4
Disable image snapshot extraction (ffmpeg)
.PP
.RE

==== Media type exclusive ====
.PP
\fB\-an\fR, \fB\-\-audio\-no\fR (required)
.PP
.RS 4
Ignore all video filters
.PP
.RE

\fB\-vn\fR, \fB\-\-video\-no\fR (required)
.PP
.RS 4
Ignore all audio filters
.PP
.RE

==== Internal filters parameters ====
.PP
\fB\-\-filter\-ebur128\-target\fR \fIDBFS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-freeze\-noisetolerance\fR \fIDB\fR
.PP
.RS 4
.RE

\fB\-\-filter\-freeze\-duration\fR \fISECONDS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-idet\-intl\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-idet\-prog\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-idet\-rep\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-idet\-hl\fR \fIFRAMES\fR
.PP
.RS 4
.RE

\fB\-\-filter\-crop\-limit\fR \fIINT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-crop\-round\fR \fIINT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-crop\-skip\fR \fIFRAMES\fR
.PP
.RS 4
.RE

\fB\-\-filter\-crop\-reset\fR \fIFRAMES\fR
.PP
.RS 4
.RE

\fB\-\-filter\-crop\-low\fR \fIINT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-crop\-high\fR \fIINT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-low\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-high\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-radius\fR \fIPIXELS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-block\-pct\fR \fIPERCENT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-block\-width\fR \fIPIXELS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-block\-height\fR \fIPIXELS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-blur\-planes\fR \fIINDEX\fR
.PP
.RS 4
.RE

\fB\-\-filter\-block\-period\-min\fR \fIINT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-block\-period\-max\fR \fIINT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-block\-planes\fR \fIINDEX\fR
.PP
.RS 4
.RE

\fB\-\-filter\-black\-duration\fR \fIMILLISECONDS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-black\-ratio\-th\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-black\-th\fR \fITHRESHOLD_FLOAT\fR
.PP
.RS 4
.RE

\fB\-\-filter\-aphase\-tolerance\fR \fIRATIO\fR
.PP
.RS 4
.RE

\fB\-\-filter\-aphase\-angle\fR \fIDEGREES\fR
.PP
.RS 4
.RE

\fB\-\-filter\-aphase\-duration\fR \fIMILLISECONDS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-silence\-noise\fR \fIDBFS\fR
.PP
.RS 4
.RE

\fB\-\-filter\-silence\-duration\fR \fISECONDS\fR
.PP
.RS 4
.RE

==== Output options ====
.PP
==== Extract to archive ====
.PP
\fB\-\-extract\fR \fIMEDIADEEPA_FILE\fR (required)
.PP
.RS 4
Extract all raw ffmpeg datas to a Mediadeepa archive file
.PP
.RE

==== Export to generated files ====
.PP
\fB\-f\fR, \fB\-\-format\fR \fIFORMAT_TYPE\fR [can be used multiple times]
.PP
.RS 4
Format to export datas
.PP
.RE

\fB\-e\fR, \fB\-\-export\fR \fIDIRECTORY\fR
.PP
.RS 4
Export datas to this directory
.PP
.RE

\fB\-\-export\-base\-filename\fR \fIFILENAME\fR
.PP
.RS 4
Base file name for exported data file(s)
.PP
.RE

==== Single export option ====
.PP
\fB\-\-single\-export\fR (required)
.PP
.RS 4
Export only this file, as: "internal\-file\-name:outputfilename\&.ext" or "internal\-file\-name:\-" to stdout
.PP
.RE

.SH "SEE ALSO"
You can read the FFmpeg filter documentation \fIhttps://ffmpeg\&.org/ffmpeg\-filters\&.html\fR to know the behavior for each used filters, and the kind of returned values\&.
.PP

The project website \fIhttps://gh\&.mexm\&.media/mediadeepa\fR contain the full documentation regarding the internal variables to specify produced filenames, image sizes\&.\&.\&.
.PP

Logging
You can manage output logs with specific options, like \fB\-\-verbose\fR, \fB\-q\fR and \fB\-\-log\fR\&.
.PP
This application use internally Logback \fIhttps://logback\&.qos\&.ch/\fR\&. The actual and default configuration XML file can be found on source code in \fBsrc/main/resources/logback\&.xml\fR\&.
.PP
To inject a new logback configuration file, add in application command line:
.PP
.RS 4
\-Dlogging\&.config="path/to/new/logback\&.xml"
.RE
.PP
For information, the use of \fB\-\-single\-export\fR option to \fB\-\fR (std out) will cut all std out log messages, but you will stay able to send log messages to text file via \fB\-\-log\fR option\&.
.PP

Search path binaries
Mediadeepa can search on several paths to found \fBffmpeg\fR/\fBffmpeg\&.exe\fR and \fBffprobe\fR/\fBffprobe\&.exe\fR (sorted by search order):
.PP
.RS 4
\- directly declared on command line by \fB\-Dexecfinder\&.searchdir=c:\\path1;c:\\path2\\subpath\fR on Windows or \fB\-Dexecfinder\&.searchdir=/path1:/path2/subpath\fR on Posix
.PP
\- on \fB$HOME\fR directory
.PP
\- on \fB$HOME/bin\fR directory, if exists
.PP
\- on \fB$HOME/App/bin\fR directory, if exists
.PP
\- on any classpath directory declared, if exists
.PP
\- on the global \fBPATH\fR environment variable
.PP
.RE
Either on Linux/Posix and Windows\&.
.PP
You can inject other binary names (other than \fBffmpeg\fR/\fBffprobe\fR) with: \fBmediadeepa\&.ffmpegExecName\fR and \fBmediadeepa\&.ffprobeExecName\fR configuration keys\&. \fB\&.exe\fR on Windows will be added/removed as needed by the application\&.
.PP
In summary, if FFmpeg/FFprobe is runnable from anywhere on your host (\fBPATH\fR), you'll have nothing to do\&.
.PP

.SH "EXIT STATUS"
0
.RS 4
Ok/done
.RE
2
.RS 4
Error
.RE
.SH "RETURN VALUE"
The application can produce several files, but return mostly processing status and log messages\&.
.PP

.SH "ABOUT AND COPYRIGHT"
You can found some documentation:
.PP
.RS 4
\- On the Mediadeepa website https://gh\&.mexm\&.media/mediadeepa \fIhttps://gh\&.mexm\&.media/mediadeepa\fR
.PP
\- On the project's README on GitHub \fIhttps://github\&.com/mediaexmachina/mediadeepa\fR\&.
.PP
\- On the Mediadeepa command line interface\&.
.PP
\- On the integrated app man page\&.
.PP
.RE
This documentation source is located on \fBsrc/main/resources/doc/en\fR directory\&.
.PP
Send bug reports on GitHub project page \fIhttps://github\&.com/mediaexmachina/mediadeepa/issues\fR
.PP
.RS 4
\- Help with the documentation\&.
.PP
\- Propose pull requests\&.
.PP
\- Or just take time to test the application and report the experience\&.
.PP
.RE
If you have any questions, feel free to reach out via any contact method listed on https://mexm\&.media \fIhttps://mexm\&.media\fR\&.
.PP

Mediadeepa 0\&.0\&.49
.PP
Copyright (C) 2022\-2024 Media ex Machina, under the GNU General Public License\&.
.PP
