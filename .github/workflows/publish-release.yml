# Don't forget to set https://github.com/USER/REPO/settings/actions >> Workflow permissions >> (*) Read and write
# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
name: Publish releases on new tag

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Unshallow git
        run: git fetch --unshallow
      - name: Build with Maven
        run: >-
          mvn -B install
          -Dgpg.skip=true
          -Dmaven.javadoc.skip=true
          -Dmaven.source.skip=true
          -DskipTests
          -Djacoco.skip=true
          -Dlicense.skipAddThirdParty=true
          -Dagent=false
          -Dmaven.javadoc.skip=true
          --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version tag
        run: echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
      - name: Extract JAR file name
        run: echo "JAR_FILE=$(find "target" -maxdepth 1 -type f -name "*.jar")" >> $GITHUB_ENV
      - name: Create release
        run: |
          curl --request POST -H 'Accept: application/vnd.github+json' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H 'X-GitHub-Api-Version: 2022-11-28' --fail \
          --data '{"tag_name":"${{ env.VERSION }}","target_commitish":"master","name":"${{ env.VERSION }}","draft":true,"prerelease":false,"generate_release_notes":true}' \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -o new-release.json
      - name: Extract release URL reference
        run: echo "UPLOAD_URL=$(cat new-release.json | jq ".upload_url" -r | cut -d "{" -f 1)" >> $GITHUB_ENV
      - name: Push created JAR file to release
        run: |
          curl --request POST -H "Accept: application/vnd.github+json" -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H "X-GitHub-Api-Version: 2022-11-28" --fail \
          -H "Content-Type: text/plain" \
          --data-binary "@${{ env.JAR_FILE }}" \
          ${{ env.UPLOAD_URL }}?name=${{ github.event.repository.name }}-${{ env.VERSION }}.jar

      - name: Setup deps for linux-springboot-packager
        run: sudo apt-get install -y coreutils dpkg lintian pandoc xmlstarlet rpm rpmlint
      - name: Setup linux-springboot-packager
        run: curl -L https://github.com/hdsdi3g/linux-springboot-packager/raw/master/get-last-release.bash | bash
      - name: Create RPM Package
        run: make-springboot-rpm . target
        env:
          SKIP_BUILD: 1
      - name: Create DEB Package
        run: make-springboot-deb . target
        env:
          SKIP_BUILD: 1
      - name: Extract RPM file name
        run: echo "RPM_FILE=$(find "target" -maxdepth 1 -type f -name "*.rpm")" >> $GITHUB_ENV
      - name: Extract DEB file name
        run: echo "DEB_FILE=$(find "target" -maxdepth 1 -type f -name "*.deb")" >> $GITHUB_ENV
      - name: Push created RPM file to release
        run: |
          curl --request POST -H "Accept: application/vnd.github+json" -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H "X-GitHub-Api-Version: 2022-11-28" --fail \
          -H "Content-Type: text/plain" \
          --data-binary "@${{ env.RPM_FILE }}" \
          ${{ env.UPLOAD_URL }}?name=${{ github.event.repository.name }}-${{ env.VERSION }}.rpm
      - name: Push created DEB file to release
        run: |
          curl --request POST -H "Accept: application/vnd.github+json" -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H "X-GitHub-Api-Version: 2022-11-28" --fail \
          -H "Content-Type: text/plain" \
          --data-binary "@${{ env.DEB_FILE }}" \
          ${{ env.UPLOAD_URL }}?name=${{ github.event.repository.name }}-${{ env.VERSION }}.deb
